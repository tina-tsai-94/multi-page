{"version":3,"sources":["Baby.js","App_ui.js","reportWebVitals.js","index.js"],"names":["Component","useStyles","makeStyles","theme","root","margin","spacing","App999","props","state","data","stu_id","gender","name","chi","eng","math","handleChange","bind","handleName","handleQuery","handleIns","parm","this","fetch","method","body","JSON","stringify","headers","Headers","then","res","json","console","log","alert","setState","catch","e","event","target","value","field","new_data","classes","className","noValidate","autoComplete","FormControl","InputLabel","htmlFor","Input","id","onChange","aria-describedby","FormHelperText","FormLabel","component","RadioGroup","aria-label","FormControlLabel","control","Radio","label","variant","OutlinedInput","Button","onClick","color","withStyles","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.986fddf8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Baby extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            isRightDad: true\r\n        }\r\n    }\r\n    static getDerivedStateFromProps(props,state){\r\n        console.log(\"getDerivedStateFromProps\")\r\n        if (props.dad!==\"Chang\")\r\n            return ({isRightDad: false})\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log(\"componentDidMount\")\r\n        setTimeout(()=>{\r\n            if(this.state.isRightDad===true)\r\n                document.getElementById('msg').innerHTML=\"他的媽媽，是小美\"\r\n            else\r\n                document.getElementById('msg').innerHTML=\"他的媽媽是誰，不知道\"\r\n        }, 3000);\r\n        document.getElementById(\"talk\").append(\"Dad!\");\r\n    }\r\n    componentWillUnmount() {\r\n        document.getElementById(\"talk\").innerHTML=\"\";\r\n    }\r\n\r\n    render(){\r\n        console.log(\"render\")\r\n        return(\r\n            <div id=\"msg\">\r\n                資料讀取中......\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Baby;\r\n","import React, { Component } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport FilledInput from '@material-ui/core/FilledInput';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport { render } from '@testing-library/react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\n// export default function App999() {\r\n\r\nclass App999 extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: {\r\n                stu_id:\"\",\r\n                gender:\"\",\r\n                name:\"\",\r\n                chi:\"\",\r\n                eng:\"\",\r\n                math:\"\",\r\n            },\r\n            name: 'TextField'\r\n        }\r\n        this.handleChange=this.handleChange.bind(this);\r\n        this.handleName=this.handleName.bind(this);\r\n        this.handleQuery=this.handleQuery.bind(this);\r\n        this.handleIns=this.handleIns.bind(this);\r\n    }\r\n\r\n\r\n    handleQuery() {\r\n        const parm={stu_id:this.state.data['stu_id']}\r\n        fetch(\"http://localhost/sql_proc.php?f=query\",{\r\n            method:\"POST\",\r\n            body: JSON.stringify(parm),\r\n            headers:new Headers()\r\n        })\r\n        .then(res =>res.json())\r\n        .then(data =>{\r\n            console.log(data)\r\n            if (data['status']=='fail') {\r\n                alert(\"Can not find\")\r\n                this.setState({data:{\r\n                        stu_id:\"\",\r\n                        gender:0,\r\n                        name:\"\",\r\n                        chi:\"\",\r\n                        eng:\"\",\r\n                        math:\"\",\r\n                }})\r\n            }\r\n            else this.setState({data: data});\r\n        })\r\n\r\n        .catch(e=>{\r\n            console.log(e)\r\n        })\r\n    }\r\n\r\n    handleIns() {\r\n        fetch(\"http://localhost/sql_proc.php?f=ins\",{\r\n            method:\"POST\",\r\n            body: JSON.stringify(this.state.data),\r\n            headers: new Headers()\r\n        })\r\n        .then(res=>res.json())\r\n        .then(data =>{\r\n            console.log(data)\r\n            if (data['status']=='fail') {\r\n                alert (data['msg']);\r\n            }\r\n            else alert (\"新增成功\");\r\n        })\r\n        .catch(e=>{\r\n            console.log(e)\r\n        })\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({name:event.target.value});\r\n    };\r\n    handleName(field,e) {\r\n        var new_data = this.state.data;\r\n        new_data[field]=e.target.value;\r\n        this.setState({data:new_data})\r\n    }\r\n\r\n\r\n    render(){\r\n      const {classes} = this.props;\r\n\r\n  return (\r\n    <form className={classes.root} noValidate autoComplete=\"off\">\r\n    <FormControl>\r\n      <InputLabel htmlFor=\"component-simple\">學號*</InputLabel>\r\n      <Input id=\"component-simple\" value={this.state.data['stu_id']} onChange={(e)=>this.handleName('stu_id',e)} />\r\n    </FormControl>\r\n    <FormControl>\r\n      <InputLabel htmlFor=\"component-helper\">姓名</InputLabel>\r\n      <Input\r\n        id=\"component-helper\"\r\n        value={this.state.data['name']}\r\n        onChange={(e)=>this.handleName('name',e)}\r\n        aria-describedby=\"component-helper-text\"\r\n      />\r\n      <FormHelperText id=\"component-helper-text\">請輸入中文姓名</FormHelperText>\r\n    </FormControl><br/>\r\n\r\n    <FormLabel component=\"legend\">性別</FormLabel>\r\n      <RadioGroup aria-label=\"gender\" name=\"gender1\" value={this.state.data['gender']} \r\n      onChange={(e)=>this.handleName('gender',e)}>\r\n        <FormControlLabel value=\"0\" control={<Radio />} label=\"女生\" />\r\n        <FormControlLabel value=\"1\" control={<Radio />} label=\"男生\" />\r\n        <FormControlLabel value=\"2\" control={<Radio />} label=\"其他\" />\r\n      </RadioGroup>\r\n\r\n    \r\n    <FormControl variant=\"outlined\">\r\n      <InputLabel htmlFor=\"component-outlined\">國文</InputLabel>\r\n      <OutlinedInput id=\"component-outlined\" value={this.state.data['chi']} onChange={(e)=>this.handleName('chi',e)} label=\"Name\" />\r\n    </FormControl>\r\n    <FormControl variant=\"outlined\">\r\n      <InputLabel htmlFor=\"component-outlined\">英文</InputLabel>\r\n      <OutlinedInput id=\"component-outlined\" value={this.state.data['eng']} onChange={(e)=>this.handleName('eng',e)} label=\"Name\" />\r\n    </FormControl>\r\n    <FormControl variant=\"outlined\">\r\n      <InputLabel htmlFor=\"component-outlined\">數學</InputLabel>\r\n      <OutlinedInput id=\"component-outlined\" value={this.state.data['math']} onChange={(e)=>this.handleName('math',e)} label=\"Name\" />\r\n    </FormControl>\r\n\r\n    <div className={classes.root}>\r\n      <Button variant=\"contained\" onClick={this.handleIns}>新 增</Button>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={this.handleQuery}>查 詢</Button>\r\n      <Button variant=\"contained\" color=\"secondary\">修 改</Button>\r\n      <Button variant=\"contained\">刪 除</Button>\r\n\r\n    </div>\r\n    </form>\r\n  );\r\n  }\r\n}\r\n\r\n\r\nexport default withStyles(useStyles)(App999);\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\n// import App999 from \"./App2\";\n// import App999 from \"./App3\";\n// import App999 from \"./App.4\";\n// import testFunction from \"./TestFunction\";\n// import App999 from \"./App_new\";\nimport Baby from \"./Baby\";\nimport App999 from './App_ui';\nimport reportWebVitals from './reportWebVitals';\n\nconst printMessage=()=>{\n  document.getElementById('show-area').innerHTML=\"我被按到了!\";\n}\n\nconst changeName=(newName)=> {\n  name = newName.target.value;\n  console.log(\"hey!\"+name);\n}\n\nvar name=\"舊的名字\";\nReactDOM.render(\n  // <React.StrictMode>\n  //   <App />\n  // </React.StrictMode>,\n  // <TestFunction name={\"Happy!\"} handleClick={printMessage}> 請按這裡~Click Here!!! </TestFunction>,\n  // <App999 name={\"Happy!\"} handleClick={printMessage} changeName={changeName}> 透過children傳值 </App999>,\n  // <Baby dad={\"Chang\"} />\n  <div>\n    <App999 />\n    <div id=\"talk\"></div>\n  </div>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}